worker_processes auto;

events {
	worker_connections 1024;
	multi_accept on;
	use epoll;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay off;
	types_hash_max_size 2048;

	uwsgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=microcache:10m max_size=500m;
	add_header microcache-status $upstream_cache_status;

	limit_conn_zone $binary_remote_addr 	zone=conn_lim:10m;
	limit_req_zone $binary_remote_addr 		zone=req_lim:10m rate=10r/s;

	open_file_cache 			max=1000 inactive=20s;
	open_file_cache_valid 		30s;
	open_file_cache_min_uses 	2;
	open_file_cache_errors		on;

	client_body_buffer_size 	16k;
	client_header_buffer_size 	1k;
	client_max_body_size 		8m;
	large_client_header_buffers 2 1k;

	client_body_timeout 	12;
	client_header_timeout 	12;

	keepalive_timeout 300;

	send_timeout 10;

	upstream api-grechka.ml {
		server 0.0.0.0:8000;
	}

        server {
                server_name api-grechka.ml;
                location / {
                        proxy_pass http://api-grechka.ml/;
                        limit_req zone=req_lim burst=5;
                        limit_conn conn_lim 1;
                }
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api-grechka.ml/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api-grechka.ml/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
        server {
    if ($host = api-grechka.ml) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
                server_name api-grechka.ml;
                listen 80;
    return 404; # managed by Certbot
}}